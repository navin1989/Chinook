@page "/"
@attribute [Authorize]

@using Microsoft.EntityFrameworkCore

<PageTitle>Index</PageTitle>

<h1>Artists</h1>

@if (Artists == null)
{
    <Loading />
}
else
{
    <div>
        <div class="text-center">
            <input class="search-box" @bind="@SearchKeyWord" placeholder="Search by artist" @oninput="FilterByArtist" />
        </div>
    </div>
    <table class="table table-striped table-hover table-sm">
        <thead>
            <tr>
                <th>Name</th>
                <th>Number of albums</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var artist in Artists)
            {
                <tr>
                    <td><a href="Artist/@artist.ArtistId">@artist.Name</a></td>
                    <td>@artist.Albums.Count()</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Artist> Artists;
    private List<Artist> tempArtists;
    private string SearchKeyWord;
    // [Inject] IDbContextFactory<ChinookContext> DbFactory { get; set; } Navin : Commented as not needed anymore.
    [Inject] IAlbumRepository albumRepository { get; set; }

    protected override async Task OnInitializedAsync() {
        await InvokeAsync(StateHasChanged);
        Artists = await albumRepository.GetAlbums(); //Gets the albums using an API service.
        tempArtists = Artists; //Search purpose
    }

    private void FilterByArtist(ChangeEventArgs e)
    {
        Artists = tempArtists;
        if (e.Value is not null)
        {
            Artists = Artists.Where(a => a.Name.Contains(e.Value.ToString())).ToList();
        }
        if(Artists.Count == 0)
        {
            Artists = tempArtists;
        }
    }
}
